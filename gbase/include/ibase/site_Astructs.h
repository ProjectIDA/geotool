/*
 *    Copyright (c) 1993-1997 Science Applications International Corporation.
 */

/*
 * NAME
 *    site_ArrayStructs.h
 *
 * SYNOPSIS
 *    Constants and declarations for the "Site" structure
 *    to be used with GDI Array Structs.
 *
 * AUTHOR
 *    Generated by gdi_gen_Astructs 110.2 08/20/97.
 *
 */

#ifndef SITE_ASTRUCTS_H
#define SITE_ASTRUCTS_H

#include "gdi_ArrayStructs.h"
#include "db_site.h"


/*
 *  "db30" macros to convert libdb30 calls to libgdi calls
 */
#ifdef USE_DB30_MACROS
#define get_site(table_name, where, tuples, maxrecs) \
                     gdi_where_ArrayStructs (gdi_get_stdconn(), (table_name), \
                                             (where), (void *) (tuples), \
                                             (maxrecs), &SITE_CONTAINER_DEF)

#define site_Aadd(table_name, tuples, ntuples, qa_flag) \
                     gdi_add_ArrayStructs (gdi_get_stdconn(), (table_name), \
                                           (void *) (tuples), (ntuples), \
                                           &SITE_CONTAINER_DEF)

/*
 *    allocate an empty tuple as a constant.
 */
static ArrayStructsArgs SITE_CONTAINER_DEF =
{
      sizeof(Site),
      0,
      (int *) NULL,
      (void *) NULL,
      (void *) &Na_Site,
      Site_Attr,
      0,
      0,
      "site"
};

#endif /* USE_DB30_MACROS */


/*
 *  The query used to create the "Site" structures:
 *       SELECT * from site
 *
 */
#define Na_Site_Init \
{ \
	"-",	/*	sta 	*/ \
	-1,	/*	ondate 	*/ \
	-1,	/*	offdate 	*/ \
	-999.0,	/*	lat 	*/ \
	-999.0,	/*	lon 	*/ \
	-999.0,	/*	elev 	*/ \
	"-",	/*	staname 	*/ \
	"-",	/*	statype 	*/ \
	"-",	/*	refsta 	*/ \
	0.0,	/*	dnorth 	*/ \
	0.0,	/*	deast 	*/ \
	"19700101 00:00:00"	/*	lddate 	*/ \
}

#define Site_Attr_Init \
{ \
	{ "sta",	offsetof(Site, sta[0]),	sizeof_(Site, sta),	AScarray_t }, \
	{ "ondate",	offsetof(Site, ondate),	sizeof_(Site, ondate),	ASlong_t }, \
	{ "offdate",	offsetof(Site, offdate),	sizeof_(Site, offdate),	ASlong_t }, \
	{ "lat",	offsetof(Site, lat),	sizeof_(Site, lat),	ASdouble_t }, \
	{ "lon",	offsetof(Site, lon),	sizeof_(Site, lon),	ASdouble_t }, \
	{ "elev",	offsetof(Site, elev),	sizeof_(Site, elev),	ASdouble_t }, \
	{ "staname",	offsetof(Site, staname[0]),	sizeof_(Site, staname),	AScarray_t }, \
	{ "statype",	offsetof(Site, statype[0]),	sizeof_(Site, statype),	AScarray_t }, \
	{ "refsta",	offsetof(Site, refsta[0]),	sizeof_(Site, refsta),	AScarray_t }, \
	{ "dnorth",	offsetof(Site, dnorth),	sizeof_(Site, dnorth),	ASdouble_t }, \
	{ "deast",	offsetof(Site, deast),	sizeof_(Site, deast),	ASdouble_t }, \
	{ "lddate",	offsetof(Site, lddate[0]),	sizeof_(Site, lddate),	AScarray_t }, \
	{ (char *) 0 } \
}


#endif /* SITE_ASTRUCTS_H */
