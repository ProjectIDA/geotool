/*
 *    Copyright (c) 1993-1997 Science Applications International Corporation.
 */

/*
 * NAME
 *    netmag_ArrayStructs.h
 *
 * SYNOPSIS
 *    Constants and declarations for the "Netmag" structure
 *    to be used with GDI Array Structs.
 *
 * AUTHOR
 *    Generated by gdi_gen_Astructs 110.2 08/20/97.
 *
 */

#ifndef NETMAG_ASTRUCTS_H
#define NETMAG_ASTRUCTS_H

#include "gdi_ArrayStructs.h"
#include "db_netmag.h"


/*
 *  "db30" macros to convert libdb30 calls to libgdi calls
 */
#ifdef USE_DB30_MACROS
#define get_netmag(table_name, where, tuples, maxrecs) \
                     gdi_where_ArrayStructs (gdi_get_stdconn(), (table_name), \
                                             (where), (void *) (tuples), \
                                             (maxrecs), &NETMAG_CONTAINER_DEF)

#define netmag_Aadd(table_name, tuples, ntuples, qa_flag) \
                     gdi_add_ArrayStructs (gdi_get_stdconn(), (table_name), \
                                           (void *) (tuples), (ntuples), \
                                           &NETMAG_CONTAINER_DEF)
/*
 *    allocate an empty tuple as a constant.
 */
static ArrayStructsArgs NETMAG_CONTAINER_DEF =
{
      sizeof(Netmag),
      0,
      (int *) NULL,
      (void *) NULL,
      (void *) &Na_Netmag,
      Netmag_Attr,
      0,
      0,
      "netmag"
};



static AsElemAttr Netmag_Attr[] =
{
	{ "magid",	offsetof(Netmag, magid),	sizeof_(Netmag, magid),	ASlong_t },
	{ "net",	offsetof(Netmag, net[0]),	sizeof_(Netmag, net),	AScarray_t },
	{ "orid",	offsetof(Netmag, orid),	sizeof_(Netmag, orid),	ASlong_t },
	{ "evid",	offsetof(Netmag, evid),	sizeof_(Netmag, evid),	ASlong_t },
	{ "magtype",	offsetof(Netmag, magtype[0]),	sizeof_(Netmag, magtype),	AScarray_t },
	{ "nsta",	offsetof(Netmag, nsta),	sizeof_(Netmag, nsta),	ASlong_t },
	{ "magnitude",	offsetof(Netmag, magnitude),	sizeof_(Netmag, magnitude),	ASdouble_t },
	{ "uncertainty",	offsetof(Netmag, uncertainty),	sizeof_(Netmag, uncertainty),	ASdouble_t },
	{ "auth",	offsetof(Netmag, auth[0]),	sizeof_(Netmag, auth),	AScarray_t },
	{ "commid",	offsetof(Netmag, commid),	sizeof_(Netmag, commid),	ASlong_t },
	{ "lddate",	offsetof(Netmag, lddate[0]),	sizeof_(Netmag, lddate),	AScarray_t },
	{ (char *) 0 }
}

#endif /* USE_DB30_MACROS */


/*
 *  The query used to create the "Netmag" structures:
 *       SELECT * from netmag
 *
 */
#define Na_Netmag_Init \
{ \
	-1,	/*	magid 	*/ \
	"-",	/*	net 	*/ \
	-1,	/*	orid 	*/ \
	-1,	/*	evid 	*/ \
	"-",	/*	magtype 	*/ \
	-1,	/*	nsta 	*/ \
	-999.0,	/*	magnitude 	*/ \
	-1.0,	/*	uncertainty 	*/ \
	"-",	/*	auth 	*/ \
	-1,	/*	commid 	*/ \
	"19700101 00:00:00"	/*	lddate 	*/ \
}

#endif /* NETMAG_ASTRUCTS_H */
